/*
Question #1: 
If we exclude the discounts that have been given, the expected profit margin for each product is calculated by: (retail price - cost) / retail price. 

Create a column that flags products with a name that includes “Vintage” as products from Nike Vintage and Nike Official otherwise. 

Calculate the expected profit margins for each product name and include the group that splits products between Nike Official and Nike Vintage in the result.
*/

-- Question #1 Solution:

SELECT
    'Nike Official' business_unit, -- Assigning new column for official
     p.product_name,
    (p.retail_price - p.cost) / p.retail_price  profit_margin
FROM
    order_items oi

JOIN products p on oi.product_id = p.product_id -- joining Nike official table order_item table with products table.

UNION -- As the question asked to show profit margin for EACH product.

SELECT
    'Nike Vintage' business_unit, -- Assigning new column for vintage.
     p.product_name,
    (p.retail_price - p.cost) / p.retail_price profit_margin
FROM
    order_items_vintage oiv

JOIN products p on oiv.product_id = p.product_id -- joining Nike vintage table order_item table with products table.

order by business_unit -- to visualise group wise one after one business unit.
;


-- commenting on my observations about the output of my solution to question 1:

-- Nike Vintage is making more profit in general compared to the Nike Official, 
-- even some of the official products are facing too much hurdle to generate profit.




/*
Question #2: 
What is the profit margin for each distribution center? Are there any centers that stand out?
*/

-- Question #2 Solution:

select dc.name dc_name, 
	   case when sum(p.retail_price) > 0 -- CASE statement handles cases where the total revenue is zero to avoid division by zero.
       then (sum(p.retail_price) - sum(p.cost)) / sum(p.retail_price) -- calculate expected profit margin for multiple products shipped by the same dc.
       else 0
       end profit_margin 
      
from distribution_centers dc

left join products p -- letf join is used to pick up all dc name to see if any dc is not making any profit or not.
	 on dc.distribution_center_id = p.distribution_center_id -- joining by the common keys from both tables.

group by dc.name

order by profit_margin desc-- to arrange in a pattern for clear understanding the margin.
;


-- commenting on my observations about the output of my solution to question 2:

-- The expected profit margin for almost all dc is quite well (more than 50%), except the 'New Orleans LA' (31%) and 'New York NY' (0%) dc. 
-- Where 'New York NY' is totally standing out by making no profits at all.



/*
Question #3: 
The real profit margin per order item is calculated by: (sales price - cost) / sales price. By summing up all the order items, we will find the real profit margin generated by the products.

Calculate the profit margin for the Nike Official products: Nike Pro Tights, Nike Dri-FIT Shorts, and Nike Legend Tee
*/

-- Question #3 Solution:

select p.product_name, 
	   (sum(oi.sale_price) - sum(p.cost)) / sum(oi.sale_price) profit_margin -- calculate real profit margin.
  
from order_items oi -- for Nike official order items and oi used AS an alias of order_items table.

join products p 
	 on oi.product_id = p.product_id -- joining by the common keys from both tables.
     
where p.product_name in ('Nike Pro Tights', 'Nike Dri-FIT Shorts', 'Nike Legend Tee') -- Calculate the profit margin for the Nike Official products: Nike Pro Tights, Nike Dri-FIT Shorts, and Nike Legend Tee

group by p.product_name
;

-- commenting on my observations about the output of my solution to question 3:

-- The product 'Nike Pro Tights' is making company to lose money among these 3 selcted products.
-- The other 2 are generating profit.




/*
Question #4: 
Calculate the real profit margin by product and split the data using the created date before 2021-05-01 and 
post 2021-05-01 for Nike Official order items.
*/

-- Question #4 Solution:

select p.product_name,

	   case when oi.created_at < '2021-05-01'
       then 'Pre-May'
       else 'Post-May'
       end may21_split, -- to check with the order created date.
       
	   Case when sum(oi.sale_price) > 0
       then (sum(oi.sale_price) - sum(p.cost)) / sum(oi.sale_price) -- calculate real profit margin for multiple oders_items of similar products.
       else 0
       end profit_margin -- calculate real profit margin.

from order_items oi -- for Nike official order items and oi used AS an alias of order_items table.

join products p -- p is an alias of products table.
	 on oi.product_id = p.product_id -- joining by the common keys from both tables.
     
group by p.product_name, may21_split

order by profit_margin desc
;

-- commenting on my observations about the output of my solution to question 4:

-- Some of the products (Nike Gym Sack, Nike Air MAx, Nike Dri-Fit, Nike Sportswear) are making extra ordinary profit 
-- whereas there are at least 10 products in the list, which do not generate any profits as well as causing the company
-- losing and investing more capital to avail these products in the market.
-- We could use Right join to see if any products are selling or not at all.




/*
Question #5: 
Calculate the profit margin by product for both Nike Official and Nike Vintage products in a single view 
*/

-- Question #5 Solution:

select p.product_name, 
	   (sum(oi.sale_price) - sum(p.cost)) / sum(oi.sale_price) profit_margin -- calculate real profit margin.
  
from order_items oi -- for Nike official order items and oi used AS an alias of order_items table.

join products p 
	 on oi.product_id = p.product_id
     
group by p.product_name

union all -- to put the 2 tables data in a single view.

select p.product_name, 
	   (sum(oiv.sale_price) - sum(p.cost)) / sum(oiv.sale_price) profit_margin -- calculate real profit margin.
  
from order_items_vintage oiv -- for Nike Vintage order items and oi used AS an alias of order_items_vintage table.

join products p 
	 on oiv.product_id = p.product_id

group by p.product_name

order by profit_margin desc
;

-- commenting on my observations about the output of my solution to question 5:

-- We can crearly see that some products are doing awesome in terms of generating profits, some are failed to reach there.
-- Most of the official items are falling behind in making profits than vintage items.
-- And we could use Right join in this code block to check if any products are selling or not at all.
-- spliting and filtering theses data by Business unit will provide more transparrent information whether the official or the vintage unit doing good. 





/*
Question #6: 
What are the top 10 products by profit margin from Nike Official and Nike Vintage? 
Include the product name, profit margin, and what business unit (Nike Official or Nike Vintage) sells the product.
*/

-- Question #6 Solution:

select 'Nike Official' business_unit, -- Assigning New Column and text for official unit.
		p.product_name, 
		(sum(oi.sale_price) - sum(p.cost)) / sum(oi.sale_price) profit_margin -- calculate real profit margin.
  
from order_items oi -- for Nike official order items and oi used AS an alias of order_items table.

join products p 
	 on oi.product_id = p.product_id
     
group by p.product_name

union all -- to put the 2 tables data in a single view.

select 'Nike Vintage' business_unit, -- Assigning New Column and text for vintage unit.
		p.product_name, 
		(sum(oiv.sale_price) - sum(p.cost)) / sum(oiv.sale_price) profit_margin -- calculate real profit margin.
  
from order_items_vintage oiv -- for Nike Vintage order items and oiv used AS an alias of order_items_vintage table.

join products p 
	 on oiv.product_id = p.product_id

group by p.product_name

order by profit_margin desc -- desc order to pull up top ones first in the list.

limit 10 -- to show top 10 products in the list.
;

-- commenting on my observations about the output of my solution to question 6:

-- It looks like the vintage products are making quite fair profits compared to the official unit.
-- the customers are attracted more to vintage items.



